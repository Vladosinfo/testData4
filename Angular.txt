// Для разработки хорошо бы установить Visual Studio Code

// Качаем и инсталируем nodejs отсюда: https://nodejs.org/en/
// После установки, нам доступны: (Работаем из командной строки)

	D:\nodejs>node --version
v12.13.1

	D:\nodejs>npm --version
6.12.1

// Далее инсталируем сам Angular (https://angular.io/cli)
// Обучающая информация:
	- https://itvdn.com/ru/video/angular-js/introduction
	D:\nodejs>npm install -g @angular/cli
// После инсталяции
ng new my-first-project // Создаем свой проект
cd my-first-project		// Переходим в директорию
ng serve				// Билдим его...

//**************************************	
	angular
	angular cli

	ng serve - для разработки (автоматом обновляется браузер - при изменении кода во время разработки)
	ng build - для того чтобы сбилдить ()

	npm install

Чтобы запустить проект - переходим в директорию проекта (в папку где лежит файл - angular.json)
В этой папке набираем команду ng serve
// Если получаем что-то наподобие:
An unhandled exception occurred: Could not find module "@angular-devkit/build-angular" from "D:\\git\\tbcbankweb\\src\\TBC.GE.Admin.AngularApp".
See "C:\Users\Vyasa\AppData\Local\Temp\ng-Iu1oUh\angular-errors.log" for further details.
// Значит нужно доинсталировать компоненты

Набираем комманду: 

	npm install

// Проходит загрузка, инсталяция
После этого набираем: 

	ng serve
	
// После компиляции... будет строка с адресом, вроде этой
//Angular Live Development Server is listening on localhost:4200, open your browser on http://localhost:4200/ **
http://localhost:4200/ и есть локальный адрес

************ Angular ************
// Как работает MVC в Anbular/ как реализован этот паттерт в Angular?
// Как работают: привязки, директивы
// Document Object Model - Angular дает нам дополнительные возможности и упрощает работу с DOM Objects
// Немножко иначе происходит работа с событиями, формами, проще проводится валидация пользовательских данных
// Фильтры 
// Массивы, обьекты, свойства
// Работа с несколькими контролами, связь между ними. как они будут между собой перекликаться...
// Есть контролы с контекстом, есть контролы без контекста (они работают поразному)
// Разработка модулей, сервисов. Как они работают, что они одтают в итоге своей работы. 
И как они между собой взаимодействуют? Это дает возможность к разширению приложения (дописывать, добавлять функционал...)
// Шаблоны - паттерны программирования (как происходит разработка поддерживаемых приложений, и как разширять... приложение
чтобы ненарушать структуру)
// Ajax
// Тестирование (как работает приложение и как оно тестируется). Как тестируются контролы, сервисы, 
как тестируются сервисы с разного рода зависимостями
как тестировать фильтры (нужно понимать: какая информация пришла, как фильтр сработал и какой результат получен; 
и что происходит если информация пришла с какими-то изменениями - не того типа, не того вида как ожидалось 
- что будет в этом случае с фильтром и как определить что произошло. Потому тчо можем неподозревать что пришло, и нужно проанализировать
и понять что произошло)

